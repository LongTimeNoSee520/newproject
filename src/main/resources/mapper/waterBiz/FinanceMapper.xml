<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjtc.mapper.waterBiz.FinanceMapper">

  <resultMap id="FinanceModel" type="com.zjtc.model.Finance">
    <result column="id" property="id" jdbcType="VARCHAR"/>
    <result column="node_code" property="nodeCode" jdbcType="VARCHAR"/>
    <result column="unit_name" property="unitName" jdbcType="VARCHAR"/>
    <result column="money" property="money" jdbcType="VARCHAR"/>
    <result column="payment_date" property="paymentDate" jdbcType="TIMESTAMP"/>
    <result column="invoice_state" property="invoiceState" jdbcType="VARCHAR"/>
    <result column="drawer_id" property="drawerId" jdbcType="VARCHAR"/>
    <result column="drawer" property="drawer" jdbcType="VARCHAR"/>
    <result column="type" property="type" jdbcType="VARCHAR"/>
    <result column="unit_code" property="unitCode" jdbcType="VARCHAR"/>
    <result column="print_person" property="printPerson" jdbcType="VARCHAR"/>
    <result column="print_time" property="printTime" jdbcType="TIMESTAMP"/>
    <result column="deleted" property="deleted" jdbcType="VARCHAR"/>
    <result column="invoice_number" property="invoiceNumber" jdbcType="VARCHAR"/>
    <result column="user_type" property="userType" jdbcType="VARCHAR"/>
  </resultMap>


  <update id="updateFinanceDeleted">
    update t_w_finance
    <set>
      deleted='1'
    </set>
    WHERE id=#{id}
  </update>
<!--  convert(char(10), GETDATE()-6, 120)-->
  <select id="queryList" parameterType="java.util.Map" resultMap="FinanceModel">
    SELECT TOP
    ${pageSize} c.*
    FROM
    (
    SELECT
    row_number () OVER ( ORDER BY [SUBSTRING(unit_code,5,2)] asc ) AS rownumber,
    id,
    node_code,
    unit_name,
    money,
    payment_date,
    invoice_state,
    CASE drawer
    WHEN NULL THEN ''
    ELSE drawer
    END drawer,
    CASE drawer_id
    WHEN NULL THEN ''
    ELSE drawer_id
    END drawer_id,
    type,
    unit_code,
    print_person,
    print_time,
    deleted,
    invoice_number,
    user_type
    FROM
    t_w_finance t1
    where deleted = '0'
    AND (invoice_state = '0' OR invoice_state = '1')
    and t1.node_code = #{nodeCode}
    <if test="unitName != null and unitName != ''">
      and unit_name like '%${unitName}%'
    </if>
    <if test="paymentDateBegin != null and paymentDateFinish != null">
      and (payment_date &gt;= #{paymentDateBegin} and payment_date  &lt;= #{paymentDateFinish})
    </if>
    <if test="money != null and money != ''">
      and money = #{money}
    </if>
    <if test="invoiceState != null and invoiceState != ''">
      and invoice_state = #{invoiceState}
    </if>
    <if test="drawer != null and drawer != ''">
      and drawer like '%${drawer}%'
    </if>
    ) c
    WHERE
    rownumber > (${pageSize}*(${currPage}-1));
  </select>

  <select id="selectCountAll" resultType="int">
    SELECT
     count(id)
    FROM
    t_w_finance t1 where deleted = '0'
    AND (invoice_state = '0' OR invoice_state = '1')
    and t1.node_code = #{nodeCode}
    <if test="unitName != null and unitName != ''">
      and unit_name like '%${unitName}%'
    </if>
    <if test="paymentDateBegin != null and paymentDateFinish != null">
      and (payment_date &gt;= #{paymentDateBegin} and payment_date  &lt;= #{paymentDateFinish})
    </if>
    <if test="money != null and money != ''">
      and money = #{money}
    </if>
    <if test="invoiceState != null and invoiceState != ''">
      and invoice_state = #{invoiceState}
    </if>
    <if test="drawer != null and drawer != ''">
      and drawer like '%${drawer}%'
    </if>
  </select>


  <select id="countMoney" resultType="java.util.Map">
    SELECT DISTINCT
    ( SELECT ROUND(SUM ( money ),2) FROM t_w_finance WHERE deleted = '0' AND invoice_state = '0'
    <if test="unitName != null and unitName != ''">
      and unit_name like '%${unitName}%'
    </if>
    <if test="paymentDateBegin != null and paymentDateFinish != null">
      and (payment_date &gt;= #{paymentDateBegin} and payment_date  &lt;= #{paymentDateFinish})
    </if>
    <if test="drawer != null and drawer != ''">
      and drawer like '%${drawer}%'
    </if>
    ) AS ont,
    ( SELECT ROUND(SUM ( money ),2)  FROM t_w_finance WHERE deleted = '0' AND invoice_state = '1'
    <if test="unitName != null and unitName != ''">
      and unit_name like '%${unitName}%'
    </if>
    <if test="paymentDateBegin != null and paymentDateFinish != null">
      and (payment_date &gt; #{paymentDateBegin} and payment_date  &lt; #{paymentDateFinish})
    </if>
    <if test="drawer != null and drawer != ''">
      and drawer like '%${drawer}%'
    </if>
    ) as yes
    FROM t_w_finance WHERE deleted = '0' AND node_code = #{nodeCode}
    GROUP BY money
  </select>

  <select id="selectInvoiceState" resultType="String">
    select invoice_state as invoiceState  from t_w_finance WHERE id = #{id}
  </select>
</mapper>