<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjtc.mapper.waterSys.FlowProcessMapper">
  <!--数据字典-->

  <select id="queryAuditList" resultType="java.util.LinkedHashMap">
    SELECT
    t1.id AS id,
    t1.operation_time AS operationTime,
    t1.audit_status AS auditStatus,
    CASE  t1.audit_status WHEN '0' THEN  '发起' WHEN '1' THEN  '待审核' WHEN '2' THEN  '审核通过' WHEN '3' THEN '审核不通过' END auditStatusName,
    t1.operator AS operator, t1.operator_id AS operatorId,  t3.org_name AS orgName,
    audit_content as auditContent
    FROM
    (
    SELECT id,operator_id, node_code, audit_status, operator ,operation_time,create_time,audit_content
    FROM t_flow_process WHERE business_id = #{id} and node_code=#{nodeCode}) AS t1
    LEFT JOIN ( SELECT id, org_id FROM t_user  where node_code=#{nodeCode}) t2 ON t1.operator_id = t2.id
    LEFT JOIN ( SELECT id, org_name FROM t_org  where  node_code=#{nodeCode}) t3 ON t2.org_id = t3.id
    order by t1.create_time ASC
  </select>
  <select id="ifNeedAudit" resultType="int">
    SELECT COUNT(id) FROM t_flow_process WHERE business_id =#{businessId} AND operator_id = #{userId} AND audit_status='1'
  </select>



  <select id="firStAuditRole" resultType="java.util.LinkedHashMap">
    SELECT
    t1.id as flowNodeId,
    t4.user_id as userId,
    t4.user_name as userName,
    t3.org_name AS orgName
    FROM
    (
    SELECT
    top 1
    id,
    flow_node_role_id
    FROM
    t_flow_node
    WHERE
    flow_id = ( SELECT id FROM t_flow WHERE node_code = #{nodeCode} AND flow_code =#{flowCode} )
    AND node_code =#{nodeCode}
    ORDER BY
    flow_sort ASC
    ) t1
    inner join (select user_id ,user_name,role_id,rank from  t_user_role_ref ) t4 on t4.role_id=t1.flow_node_role_id
    inner JOIN ( SELECT id, org_id FROM t_user  where node_code=#{nodeCode}) t2 ON t4.user_id = t2.id
    inner JOIN ( SELECT id, org_name FROM t_org  where node_code=#{nodeCode}) t3 ON t2.org_id = t3.id
    ORDER BY
    t4.rank ASC
  </select>


  <select id="secondAuditRole" resultType="java.util.LinkedHashMap">
    SELECT
    t1.id as flowNodeId,
    t4.user_id as userId,
    t4.user_name as userName,
    t3.org_name AS orgName
    FROM
    (
    select
    *
    from
    (
    select row_number() over(ORDER BY flow_sort ASC) rn,
    id,
    flow_node_role_id
    FROM
    t_flow_node
    WHERE
    flow_id = ( SELECT id FROM t_flow WHERE node_code = #{nodeCode} AND flow_code =#{flowCode} )
    AND node_code =#{nodeCode}
    ) t where rn=2
    ) t1
    inner join (select user_id ,user_name,role_id,rank from  t_user_role_ref ) t4 on t4.role_id=t1.flow_node_role_id
    inner JOIN ( SELECT id, org_id FROM t_user  where node_code=#{nodeCode}) t2 ON t4.user_id = t2.id
    inner JOIN ( SELECT id, org_name FROM t_org  where node_code=#{nodeCode}) t3 ON t2.org_id = t3.id
    ORDER BY
    t4.rank ASC
  </select>

  <select id="selectNodes" resultMap="flowInfoResult">
    SELECT id,node_code,flow_id,flow_node_name,remark,flow_node_role_id,
    flow_node_role_name,flow_node_code,flow_sort
    FROM t_flow_node
    WHERE flow_id =(SELECT id FROM t_flow WHERE node_code = #{nodeCode} AND flow_code = #{flowCode})
  </select>


  <select id="isFirstFlowNode" resultType="java.lang.Long">
    SELECT
    count(1)
    FROM
    (
    SELECT
    top 1
    flow_node_role_id
    FROM
    t_flow_node
    WHERE
    flow_id = ( SELECT id FROM t_flow WHERE node_code =#{nodeCode} AND flow_code =#{flowCode})
    ORDER BY
    flow_sort ASC
    ) t1
    inner join (select user_id ,role_id from  t_user_role_ref ) t4 on t4.role_id=t1.flow_node_role_id
    where user_id=#{userId}
  </select>
</mapper>